version=pmwiki-2.2.0 ordered=1 urlencoded=1
agent=Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.19) Gecko/20081216 Ubuntu/8.04 (hardy) Firefox/2.0.0.19
author=Petko
charset=ISO-8859-1
csum=refactored, mv questions to talk page
ctime=1138643894
host=81.65.14.164
name=PmWiki.PageLists
rev=172
targets=PmWiki.PageListTemplates,PmWiki.DocumentationIndex,PmWiki.PageTextVariables,PmWiki.WikiTrails,Site.PageListTemplates,PmWiki.Categories,PmWiki.ConditionalMarkup,PmWiki.CustomPagelistSortOrder,PmWiki.PageDirectives,PmWiki.PageListExamples,PmWiki.PagelistVariables,Site.LocalTemplates,PmWiki.PageVariables
text=(:Audience: authors, admins (intermediate) :)%0a(:Summary:Listing pages by multiple criteria with templated output:)%0aPmWiki comes with two directives for generating lists of pages -- [@(:pagelist:)@] and @@[=(:=]searchresults:)@@.  Both directives are basically the same and each accepts the parameters documented below.  The primary difference between the two is that searchresults generates the "Results of search for ..." and "### pages found out of ### searched" messages around the results.%0a%0aThe [@(:searchbox:)@] directive generates a search form (input text box) to submit search queries.  The markup generally accepts the same parameters as [@(:pagelist:)@], which makes it possible to restrict, order and format searchresults in the same ways that are described below for a [@(:pagelist:)@].  For more information about the [@(:searchbox:)@] directive, and the ways in which it differs from a [@(:pagelist:)@], skip to the section [[#searchbox|below]].%0a%0a!! Basic syntax%0a%0a* [@(:pagelist:)@] %0a->without any arguments shows a bulleted list of all pages, as links, ordered alphabetically and in groups.%0a* @@[=(:=]pagelist [[#pagelistgroup|group]]=''abc'' \%0a  [[#pagelistname|name]]=''def'' \%0a  [[#pagelistfmt|fmt]]=''[[page list templates|template]]''  \%0a  [[#pagelistlist|list]]=''ghi'' \%0a  [[#pagelistorder|order]]=''jkl'' \%0a  [[#pagelistcount|count]]=''123'' \%0a  [[#pagelistlink|link]]=''mno'' \%0a  [[#pagelistreq|''request=1 req=1'']] \%0a  [[#pagelisttrail|trail]]=''pqr''  \%0a  [[#pagelistwrap|wrap]]=''stu''  \%0a  [[#pagelistpasswd|passwd]]=''vwx''  \%0a  [[#pagelistif|if]]=''yz''  \%0a  [[#pagetextvariables|$:''ptv'']]=''yz'' \%0a  ''[[#pagelistarg|argument]]1''&nbsp;-''[[#pagelistarg|argument]]2'' ''etc'':)@@ %0a->shows a pagelist according to the  parameters supplied. Parameters are optional.%0a* @@[=(:=][[#searchbox|searchbox]] value=''abc'' size=''99'' target=''def'':)@@%0a%0a!! Parameters%0a[[#pagelistarg]]%0aAny argument supplied within [@(:pagelist:)@] that isn't in the form @@'key=value'@@ is treated as text that either must (or must not) exist in the page text.%0a%0aThe minus sign (-) or exclamation mark (!) can be used to indicate the logical ''not''. Thus%0a->[@(:pagelist trail=PmWiki.DocumentationIndex list=normal apple !pie:)@]%0alists all "normal" pages listed in the [[Documentation Index ]] trail that contain the word "apple" but not "pie".%0a%0a!!![[#pagetextvariables]]With page text variables%0aYou can also use [[page text variables]] as a ''key'' to list pages according to the existence of a page text variable. Eg : %0a->[@(:pagelist $:pagetextvar=avalue:)@]%0alists pages having ''$:pagetextvar'' set to ''avalue''.%0a[[%3c%3c]]%0aMinus sign (-), wildcards (?*) and a comma separated list of values also works when specifying a selection based on pagetextvariables. Eg :%0a->[@(:pagelist $:apagetextvar=t*,-test:)@]%0alists pages having $:apagetextvar like 't*' but not 'test'.%0a[[%3c%3c]]%0aExamples:%0a||width=* class="tabtable" rules=rows%0a||PTV is set (is not empty): ||[@(:pagelist $:MyPageTextVariable=- :)@]||%0a||PTV is empty or not set:[[%3c%3c]]&nbsp;(ie, is not set to one char followed by 0 or more chars) ||[@(:pagelist $:MyPageTextVariable=-?* :)@]||%0a||PTV is not VALUE:          ||[@(:pagelist $:MyPageTextVariable=-VALUE :)@]||%0a||PTV is set and not YES:    ||[@(:pagelist $:MyPageTextVariable=?*,-YES :)@]||%0aBe aware that if using [@(:pagelist $:MyPTV=$:YourPTV :)@] PTVs include PmWiki formatting, so you may not get the matches you expect. Currently the only way around this is to use wild cards, so if the formatting is embedded you may be out of luck.%0a%0a!!![[#pagelistgroup]] group= and [[#pagelistname]]name= %0a%0aThe "[@group=@]" and "[@name=@]" parameters limit results to pages in a specific group or with a specific name:%0a(:table class='tabtable' rules=rows:)%0a(:cellnr:)All pages in the Pmwiki group:%0a(:cell:)[@(:pagelist group=PmWiki :)@]%0a(:cellnr:)All pages except those in the PmWiki or Site groups:%0a(:cell:)[@(:pagelist group=-PmWiki,-Site :)@]%0a(:cellnr:)All RecentChanges pages%0a(:cell:)[@(:pagelist name=RecentChanges :)@]%0a(:cellnr:)All pages except RecentChanges%0a(:cell:)[@(:pagelist name=-RecentChanges :)@]%0a(:tableend:)%0a%0a!!! Wildcards%0aName and group parameters can contain ''wildcard'' characters that display only pages matching a given pattern:%0a* An asterisk (*) represents zero or more characters%0a* A question mark (?) represents exactly one character%0a%0aExamples:%0a(:table class='tabtable' rules=rows:)%0a(:cell:)All pages in any group beginning with "PmWiki"%0a(:cell:)[@(:pagelist group=PmWiki* :)@]%0a(:cellnr:)All pages in any group beginning with "PmWiki", except for Chinese%0a(:cell:)[@(:pagelist group=PmWiki*,-PmWikiZh :)@]%0a(:cellnr:)All pages in the PmCal group with names starting with "2005":%0a(:cell:)[@(:pagelist name=PmCal.2005* :)@]%0a(:cellnr:)All Cookbooks with names beginning with a A and a B letter%0a->note the different separators used for the same result%0a(:cell:)[@%0a(:pagelist group=Cookbook name=A*,B*   :)%0a(:pagelist group=Cookbook name="A* B*" :)%0a(:pagelist group=Cookbook name=[AB]*   :)%0a(:pagelist group=Cookbook, name=[AB]*   :)@]%0a(:tableend:)%0a%0aIf you want to use multiples conditions in name you need to use quotes or commas to delimit the string. %0a%0a!!![[#pagelisttrail]] trail= %0aThe "[@trail=@]" option obtains the list of pages to be displayed from a [[WikiTrail(s)]]:%0a* Display pages in the documentation by modification time%0a->[@(:pagelist trail=PmWiki.DocumentationIndex order=-time:)@]%0a* Display five most recently changed pages%0a-%3c[@(:pagelist trail=RecentChanges count=5:)@]%0a%0a!!![[#pagelistlist]] list= %0a%0aThe "[@list=@]" option allows a search to include or exclude pages according to predefined patterns set by the administrator.  %0a* "[@list=normal@]" is predefined, and which excludes things like AllRecentChanges, RecentChanges, GroupHeader, GroupFooter, GroupAttributes, and the like from being displayed in the list results.  Note that list=normal also excludes the current page.%0a* "[@list=all@]" over-rides a "default" list that may be set by the wiki's administrator to exclude groups such as PmWiki or Site from regular search results.%0a* Wiki administrators can define custom lists via the $SearchPatterns array (see [[Cookbook:SearchResults]]).%0a%0a!!![[#pagelistfmt]] fmt= %0a%0aThe "[@fmt=@]" option determines how the resulting list should be displayed.  %0aPmWiki [[Site/PageListTemplates|predefines]] several formats:%0a* @@fmt=#bygroup@@ - Display pages within groups (default format)%0a* @@fmt=#simple@@  - Display a simple ordered list of pages in the form Group.Name%0a* @@fmt=#title@@   - Display a list of pages by page title.  Use "[@order=title@]" to have them sorted by title (default is to order by page name).%0a* @@fmt=#group@@   - Display a list of wikigroups (without listing the pages in the groups)%0a* @@fmt=#include@@ - Display the contents of each page in the list (note, this could take a very long time for long lists!)%0aThese formats are defined by [[page list templates]], which can be customized.%0a%0aThis format is not predefined by a page list template:%0a* @@fmt=count@@ - Display the number of pages in the list (note the absence of the "#").%0a* @@fmt=authtable@@ - Display a table of pages with ''read'', ''edit'', ''attr'', ''upload'', and ''publish'' settings (note the absence of the "#").%0a%0a%0a!!![[#pagelistlink]] link= %0a%0aThe "[@link=@]" option implements "backlinks" -- i.e., it returns a list of pages with a link to the target.  It's especially useful for [[categor(ies)]]y pages and finding related pages.%0a%0a* all pages with a link to PmWiki.DocumentationIndex%0a->[@(:pagelist link=PmWiki.DocumentationIndex:)@]%0a* all pages with links to the current page%0a->[@(:pagelist link={$FullName}:)@]%0a* all pages in the "Skins" category%0a->[@(:pagelist link=Category.Skins:)@]%0a%0a!!![[#pagelistreq]] request=1 req=1%0a[=(:searchresults:)=] without the introductory line that says "Results of search for..."%0a%0a!!![[#pagelistcount]] count= %0a%0aThe "[@count=@]" option provides the ability to%0a* limit the pagelist to a specific number of pages%0a* subsets of a list%0a* return items from the end of a list, subsets of a list%0a* display pages in reverse sequence%0a%0a(:table class=tabtable rules=rows:)%0a(:cellnr:)A simple bullet list of ten most recently modified pages%0a(:cell:)%0a[@(:pagelist trail=Site.AllRecentChanges count=10 fmt=#simple:)@]%0a(:cellnr:)Display the first ten pages of a list%0a(:cell:)%0a[@count=10          # display the first ten pages of list@]%0a(:cellnr:)Negative numbers specify pages to be displayed from the end of the list:%0a(:cell:)%0a[@count=-10         # display last ten pages of list@]%0a(:cellnr:)Ranges may be specified using '..', thus:%0a(:cell:)%0a[@count=1..10       # first ten pages of list%0acount=5..10       # 5th through 10th pages of list@]%0a(:cellnr:)Negative numbers in ranges count from the end of the list:%0a(:cell:)%0a[@count=-10..-5     # 10th from end, 9th from end, ..., 5th from end@]%0a(:cellnr:)Omitting the start or end of the range uses the start or end of the list:%0a(:cell:)%0a[@count=10..        # skip first ten pages%0acount=..10        # 1st through 10th page of list%0acount=-10..       # last ten pages of list%0acount=..-10       # all but the last nine pages@]%0a(:cellnr:)Ranges can be reversed, indicating that the order of pages in the output should likewise be reversed:%0a(:cell:)%0a[@count=5..10       # 5th through 10th pages of list%0acount=10..5       # same as 5..10 but in reverse sequence%0acount=-1..1       # all pages in reverse sequence@]%0a(:cellnr:)"Reverse sequence" here refers to the sequence ''after'' any sorting has taken place.  Therefore the three directives to the right are equivalent:%0a(:cell:)%0a[@(:pagelist order=-name count=10:)%0a(:pagelist order=-name count=1..10:)%0a(:pagelist order=name count=-1..-10:) @]%0a(:tableend:)%0a%0a!!![[#pagelistwrap]] wrap=%0aThe "[@wrap@]" option has the values, ''none'', ''html'', and ''inline''.%0aWith "wrap=inline" and "wrap=HTML" the output from pagelist (markup or HTML) is directly embedded in a page's markup or without any surrounding %3cdiv>...%3c/div> tags.%0a%0a!!![[#pagelistpasswd]] passwd=%0aThe "[@passwd@]" option returns only those pages that have some sort of password attribute on them.%0a%0a!!![[#pagelistif]] if=%0aThe "[@if@]" option allows a condition to be specified as part of the pagelist processing, rather than from within the [[page list template(s)]]. Only those pages for which the condition is true are retrieved. Anything that could [[ConditionalMarkup | go within an [@(:if ...:)@]]] can be used as a condition. For example%0a%0a  [@(:pagelist if="date {(ftime %25GW%25V {*$Name})} {=$Name}" :)@]%0a%0areturns all of the pages where the name is in the same week as that of the current page.%0a%0a!!![[#pagelistorder]] order=%0a%0aThe "[@order=@]" option allows the pages in the list to be sorted according to different criteria.  Use a minus sign to indicate a reverse sort.  Multiple sorting criteria can be specified using a comma, and you can create your own [[custom pagelist sort order]]:%0a* [@order=name@] - alphabetically by name (default order)%0a* [@order=title@] - alphabetically by title rather than names%0a* [@order=time@] - most recently changed pages '''last'''%0a* [@order=ctime@] - time of page creation (see note)%0a* [@order=size@] - page size (not file size), smallest pages first%0a* [@order=group,title@] - by multiple criteria, in this instance sort by title within groups%0a* [@order=random@] - shuffle the pages into random sequence%0a* [@order=$:pagetextvarname@] - alphabetically by [[PageTextVariables|page text variable]] value%0a%0aAlso, the [@order=@] option allows custom ordering functions to be written.%0a->Note: fmt=trail results in an unordered pagelist, i.e. the trail order is preserved in the pagelist. So PmWiki's alphabetical default order does not apply in this case.%0a->Note: ctime was added to pages only from pmwiki 2.1.beta15 onwards, pages created by earlier versions don't carry a ctime attribute and can't be sorted that way.%0a%0a!! Examples%0a%0aInclude the contents of a random page from the Banners group:%0a->[@(:pagelist group=Banners order=random count=1 fmt=#include list=normal:)@]%0a%0aDisplay a simple list of the last ten recently changed pages:%0a->[@(:pagelist trail=Site.AllRecentChanges count=10 fmt=#simple:)@]%0a%0aDisplay the "top twenty" biggest cookbook pages:%0a->[@(:pagelist group=Cookbook order=-size count=20 :)@]%0a%0a!![[#searchbox]] The Searchbox Directive%0a%0aThe [@(:searchbox:)@] directive generally accepts the same parameters as [@(:pagelist:)@] and [@(:input text:)@] directives:%0a* Pagelist parameters can be added to the input text of a searchbox (or to the markup, or both)%0a* Input text box parameters can be added to the searchbox markup%0a** An initial search string can be specified in the searchbox markup, but it must be in the form @@value='search string'@@.  That search string is displayed in the input text and can be modified by when the search is run.%0a** The size of the text input field can be specified with the size parameter, where "size=40" would specify the current default value.%0a*** Tip:  If more than one searchbox appears on a page, adding a blank initial value like this @@value=''@@, to the markup for each searchbox will prevent a search string for one box from populating all of the other boxes.%0a* The target page for displaying searchbox results can be set with the parameter @@target=''GroupName.PageName''@@.  The default is the current page. %0a* The entire searchbox form can be overridden by defining the $SearchBoxFmt variable in one's configuration file.  If $SearchBoxFmt is defined, then the parameters to [@(:searchbox:)@] are ignored, and the content of the $SearchBoxFmt variable are used instead.%0a%0a!! See Also%0a%0a* [[PageDirectives#attachlist]] - display a list of attachments%0a* [[Site.PageListTemplates]] - default pmwiki pagelist templates%0a* [[Cookbook:PagelistTemplateSamples]] - contributed pagelist template samples%0a* [[PmWiki/PageListExamples]] - Examples of what is produced by default pagelist formats%0a* [[PmWiki/PageListTemplates]] - how to create custom pagelist templates for the fmt= option%0a* [[(PmWiki/)PagelistVariables]] - ''local/config.php'' customizations%0a* [[Cookbook:Forms]] - documentation for [@(:input text:)@] markup, which applies to [@(:searchbox:)@]%0a* [[(PmWiki/)CustomPagelistSortOrder]] - creating custom order sort functions%0a* [[Cookbook:CustomPagelistSortOrderFunctions]] - {Cookbook.CustomPagelistSortOrderFunctions$:Summary}%0a%0a%0a>>faq%3c%3c [[#faq]]%0a%0aQ: How can I configure my site to always exclude wiki-related pages from searches?%0aA: Try the following in your ''local/config.php file''.  See also [[Cookbook:SearchPatterns]].%0a->[@%0a## Exclude Certain pages / groups from search results.%0a$SearchPatterns['default'][] = '!\\.(All)?Recent(Changes|Uploads|Comments)$!';%0a$SearchPatterns['default'][] = '!\\.Group(Print)?(Header|Footer|Attributes)$!';%0a$SearchPatterns['default'][] = '!\\.(Left|Right|Side)(Bar|Menu|Note)$!';%0a$SearchPatterns['default'][] = '!^Site\\.!';%0a$SearchPatterns['default'][] = '!^PmWiki\\.!';%0a@]%0a%0aIf you add [@$SearchPatterns['default']...@] to exclude groups and pages from pagelist and search output, you can ''include'' the omitted pages by using "list=all" in the pagelist or search parameters.%0a%0aQ: How do I turn on wiki word spacing in page lists?%0aA: Try the following in your [[Site.LocalTemplates]]%0a [=----%0a!!!fmt=#simplelist%0a%0aSimple list of page names, without the Group name. %0a%0a[@%0a[[#simplelist]]%0a[[({=$Group}/){=$Name}|{=$Titlespaced}]],%0a[[#simplelistend]]%0a@]%0a=]%0a%0aQ: Can I customize the text in the button generated by the [@(:searchbox:)@] directive? %0aA: The searchbox directive does not appear to support a parameter to change the label of the associated submit button.%0a%0aQ: How to list only pages that have their title (*not* name) starting with A, B, C,...%0aA: [=(:pagelist $Title=A*,B*,C* :)=]%0a%0aQ: How do I search for pages changed by an particular author?%0aA: It would be useful to provide Author= (similar to name= or group=).%0a%0aTry using the Cookbook:AuthorContribution recipe.%0a%0aThis recipe provides a way to automatically keep a list of the pages each author has edited by producing an "Author Contributions" page with a name of Profiles.%3cauthor's name>-Contrib for each author that has a page in the Profiles group.%0a%0aContributions by authors without profile pages are placed in a single Profiles.Other-Contrib page.%0a%0aYou may try pagelist using $LastModifiedBy variable, as in :  [@(:pagelist / list=normal group=-PmWiki $LastModifiedBy=-X:)@] or [@(:pagelist / list=normal group=-PmWiki $LastModifiedBy=X:)@] to print the list of pages last edited by all but X or edited by x (Petko's pagelist).%0a%0aQ: How to exclude deleted pages from [@ (:pagelist trail=Site.AllRecentChanges fmt=#title count=15 order=-time :) @]%0aA: Use [=(:pagelist trail=Site.AllRecentChanges if="exists {=$FullName}"=] ...:)%0a%0aQ: order=ctime displays the pages in the order they were created.  Is there a way to reverse this (so that the newest page appears first)?%0aA: Yes. Use @@order=-ctime@@ (note the "minus").%0a%0aQ: A pagelist excludes the current page from the generated list if "list=normal", how can the current page be included while retaining all the other benefits of using "list=normal"?%0aA: Set in config.php this: @@$SearchPatterns['normal']['self'] = "";@@ %0aIf you want to be able to use both behaviors, set this in config.php:%0a  $SearchPatterns['normalself'] = array(%0a  'recent' => '!\.(All)?Recent(Changes|Uploads)$!',%0a  'group' => '!\.Group(Print)?(Header|Footer|Attributes)$!');%0aThen use @@list=normalself@@ on pages that should include themselves in the results.%0a%0aQ: Is it possible to return a list of all pages that are not protected by the site password? %0a-> Experimenting with the "passwd="-attribute didn't get me very far...%0aA: Perhaps [[Cookbook:AuthListShort]] might help.%0a%0aQ: I want to list all the pages in a wikigroup dynamically, how do I do that?%0a-> E.g. I am creating groups Apple, Orange, Pear and I want each group page to display all the associated group pages e.g. Apple.RecentChanges, Apple.Apple, Apple.HomePage in each Apple page & Orange.somePage, Orange.RecentChanges in each Orange page. It is something like a page directory. How do I do this using a template for every page? Thanks so much!%0aA: You can use: @@[=(:pagelist group={*$Group} :)=]@@ to list pages in the current Group. See [[PageVariables]] (note the "*" in [={*$Group}=]).%0a%0a%0a
time=1234650412
